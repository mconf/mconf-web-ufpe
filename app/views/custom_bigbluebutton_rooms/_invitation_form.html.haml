#webconference-invitation

  .modal-header
    = modal_close_button
    %h3= t('.title')

  = simple_form_for :invite, :url => send_invitation_bigbluebutton_room_path(room), :html => { :class => 'single-column' } do |f|

    .modal-body
      .invitation-header
        %span= t('.meeting_in')
        %span.meeting-url= join_webconf_url(room)

      = f.input :users, :as => :string, :autofocus => true, :label => t('activerecord.attributes.invite.users')

      -# TODO: it would be good to have a custom simple_form input for dates (see #1262)
      .invitation-dates
        %label#invite_starts_on_label
          = form_required_label
          = t('activerecord.attributes.invite.starts_on')
        #invite_timezone
          = "(#{t(".timezone", :timezone => user_timezone)})"
        #invite_starts_on.input.input-append
          %input{ :'data-format' => t('_other.datetimepicker.format'), :type => "text", :name => 'invite[starts_on]' }
          %span.add-on
            %i{ :class => "icon icon-calendar" }
        %span= t(".at")
        #invite_starts_on_time
          = f.input :starts_on_time, :label => false, :as => :time, :minute_step => 5, :prompt => { :hour => "", :minute => "" }
      .invitation-dates
        %label
          = form_required_label
          = t('activerecord.attributes.invite.ends_on')
        #invite_ends_on.input.input-append
          %input{ :'data-format' => t('_other.datetimepicker.format'), :type => "text", :name => 'invite[ends_on]' }
          %span.add-on
            %i{ :class => "icon icon-calendar" }
        %span= t(".at")
        #invite_ends_on_time
          = f.input :ends_on_time, :label => false, :as => :time, :minute_step => 5, :prompt => { :hour => "", :minute => "" }
      #invite_duration.input
        %span= t(".duration") + ":"
        %span.duration= ""

      = f.input :title, :as => :string, :label => t('activerecord.attributes.invite.title')
      = f.input :message, :as => :text, :label => t('activerecord.attributes.invite.message'), :required => false

    .modal-footer.form-actions
      = f.button :wrapped, t('_other.send'), :disabled => true, :class => "btn btn-primary", :cancel_modal => true
