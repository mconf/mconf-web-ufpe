-# Note: this view can be seen by the user himself or by an admin.
-#   It will behave differently in each case.

- if current_user == @user
  = content_for :page_header_extra do
    %span= t('.did_not_find_info')
    = link_to t('.click_to_edit_profile'), edit_user_profile_path(@user)
  = render_page_title t('.title')
- else
  = content_for :page_header_extra do
    %span= t('.did_not_find_info')
    = link_to t('.other_user.click_to_edit_profile'), edit_user_profile_path(@user)
  = render_page_title t('.other_user.title')

- unless @user.confirmed?
  #user-not-confirmed.alert.alert-warning
    - if current_user == @user
      = t('.not_confirmed', :url => new_user_confirmation_path).html_safe
    - else
      = t('.other_user.not_confirmed')

- if current_user == @user
  - if user_signed_in_via_federation?
    #user-federated-info.alert.alert-gray
      %span.title= t('.federated.title')
      - unless @shib_provider.blank?
        %span= t('.federated.your_idp', :idp => @shib_provider)
      = link_to t('.federated.see_your_data'), shibboleth_info_path, :class => 'open-modal'
  - if user_signed_in_via_ldap?
    #user-ldap-info.alert.alert-gray
      %span.title= t('.ldap.title')

= simple_form_for @user, :url => user_path(@user), :html => { :method => :put } do |f|

  .left-column

    #account-info
      %h3= t('.account_info')
      = f.input :email, :required => false, :disabled => true
      = f.input :username, :required => false, :disabled => true
    - if current_site.local_auth_enabled? || @user.admin?
      #change-password
        %h3= t('.change_password')
        - unless current_user.superuser?
          = f.input :current_password
        = f.input :password, :autocomplete => "off", :required => false
        = f.input :password_confirmation, :required => false

  .right-column
    #account-preferences
      %h3= t('.preferences')

      = f.input :timezone, :required => false do
        = f.time_zone_select :timezone, nil, :include_blank => true

      = f.input :expanded_post, :required => false, :as => :radio_buttons

      = f.input :receive_digest, :required => false do
        - collection = []
        - collection.push([User::RECEIVE_DIGEST_NEVER, t('.receive_digest.never')])
        - collection.push([User::RECEIVE_DIGEST_DAILY, t('.receive_digest.daily')])
        - collection.push([User::RECEIVE_DIGEST_WEEKLY, t('.receive_digest.weekly')])
        = f.collection_radio_buttons :receive_digest, collection, :first, :last

  - if user_signed_in? && current_user.superuser
    #management-options.alert.alert-gray
      %h3= t('.management_options')
      = f.input :can_record, :required => false

      -# prevent admins from mistakenly removing themselves from being admins or blocking
      -# access to their account
      - unless current_user == @user
        = f.input :approved, :required => false
        = f.input :superuser, :required => false
        - if !@user.confirmed?
          .input
            = link_to confirm_user_path(@user), :data => { :confirm => t('.confirm_user_confirm') },  :method => :post do
              = icon_confirm_user(:alt => t('.confirm_user'))
              = t('.confirm_user')
        .input
          = link_to disable_user_path(@user), :data => { :confirm => t('.disable_confirm') }, :method => :delete do
            = icon_disable(:alt => t('.disable'))
            = t('.disable')

  = f.button :wrapped, :cancel => edit_user_path(@user), :value => t("_other.save")

  - if current_user == @user
    #cancel-account.alert.alert-danger
      %span= t('.cancel_account')
      = link_to t('.yes_cancel_account'), disable_user_path(current_user), :data => { :confirm => t("are_you_sure") }, :method => :delete, :class => 'btn btn-small btn-danger'
